<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.mojo.webstart.it003</groupId>
    <artifactId>webstart-it003-parent</artifactId>
    <version>1.0</version>
  </parent>

  <artifactId>webapp</artifactId>
  <packaging>war</packaging>
  <name>WebstartDemoWebApplication</name>
  <url>http://maven.apache.org</url>

  <description>
    Web-application to demonstrate the WebstartMavenPlugin.
  </description>


  <organization>
    <name>MyCompany</name>
    <url>http://www.mycompany.org</url>
  </organization>

  <dependencies>
    
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>webstart-jnlp-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>webstart-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>jnlp-download-servlet</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <outputDirectoryName>webstart</outputDirectoryName>
          <jnlpFiles>
            <jnlpFile>
              <templateFilename>jnlpTemplate.vm</templateFilename>
              <outputFilename>launch1.jnlp</outputFilename>
              <jarResources>
                <jarResource>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>hello-world</artifactId>
                  <version>${project.version}</version>
                  <mainClass>org.mycompany.webstart.HelloWorld</mainClass>
                </jarResource>
              </jarResources>
              <properties>
                <env>dev1</env>
              </properties>
            </jnlpFile>
            <jnlpFile>
              <templateFilename>jnlpTemplate.vm</templateFilename>
              <outputFilename>launch2.jnlp</outputFilename>
              <jarResources>
                <jarResource>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>hello-world</artifactId>
                  <version>${project.version}</version>
                  <mainClass>org.mycompany.webstart.HelloWorld</mainClass>
                </jarResource>

                <jarResource>
                  <groupId>junit</groupId>
                  <artifactId>junit</artifactId>
                  <version>3.8.1</version>
                </jarResource>
              </jarResources>
              <properties>
                <env>dev2</env>
              </properties>

            </jnlpFile>
          </jnlpFiles>

          <sign>
            <keystore>${project.build.directory}/keyStore</keystore>
            <!-- path or URI (if empty, the default keystore ".keystore"-file in the user-homedir is used) -->
            <keypass>password</keypass>
            <!-- we need to override passwords easily from the command line. ${keypass} -->
            <storepass>password</storepass>
            <!-- ${storepass} -->
            <alias>webstart</alias>
            <!-- alias of the key to  use -->
            <!-- the following key-settings are only used if the keystore and key has to be generated at build-time -->
            <storetype>jks</storetype>
            <validity>365</validity>
            <dnameCn>Firstname Lastname</dnameCn>
            <dnameOu>OrganisationalUnit</dnameOu>
            <dnameO>Organisation</dnameO>
            <dnameL>Location</dnameL>
            <dnameSt>State</dnameSt>
            <dnameC>CountryCode</dnameC>

            <!-- KEYSTORE MANGEMENT -->
            <keystoreConfig>
              <delete>true</delete>
              <!-- delete the keystore at build time -->
              <gen>true</gen>
              <!-- generate keystore and key at build time -->
            </keystoreConfig>

            <verify>false</verify>
            <!-- verify the signature after signing -->
          </sign>
          <unsign>true</unsign>
          <!-- unsign already signed packages and sign them with own key -->

          <filenameMapping>simple</filenameMapping>
          <!-- use simple filename mapping -->
        </configuration>
      </plugin>
    </plugins>

    <finalName>webapp</finalName>
  </build>
</project>
